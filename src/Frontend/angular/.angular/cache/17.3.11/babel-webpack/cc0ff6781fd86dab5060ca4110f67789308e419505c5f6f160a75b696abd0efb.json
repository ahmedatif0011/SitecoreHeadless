{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.traverseComponent = exports.traverseField = exports.traversePlaceholder = exports.getContentStylesheetUrl = exports.getContentStylesheetLink = void 0;\nconst constants_1 = require(\"../constants\");\n/**\n * Regular expression to check if the content styles are used in the field value\n */\nconst CLASS_REGEXP = /class=\".*(\\bck-content\\b).*\"/g;\n/**\n * Get the content styles link to be loaded from the Sitecore Edge Platform\n * @param {LayoutServiceData} layoutData Layout service data\n * @param {string} sitecoreEdgeContextId Sitecore Edge Context ID\n * @param {string} [sitecoreEdgeUrl] Sitecore Edge Platform URL. Default is https://edge-platform.sitecorecloud.io\n * @returns {HTMLLink | null} content styles link, null if no styles are used in layout\n */\nconst getContentStylesheetLink = (layoutData, sitecoreEdgeContextId, sitecoreEdgeUrl = constants_1.SITECORE_EDGE_URL_DEFAULT) => {\n  if (!layoutData.sitecore.route) return null;\n  const config = {\n    loadStyles: false\n  };\n  (0, exports.traverseComponent)(layoutData.sitecore.route, config);\n  if (!config.loadStyles) return null;\n  return {\n    href: (0, exports.getContentStylesheetUrl)(sitecoreEdgeContextId, sitecoreEdgeUrl),\n    rel: 'stylesheet'\n  };\n};\nexports.getContentStylesheetLink = getContentStylesheetLink;\nconst getContentStylesheetUrl = (sitecoreEdgeContextId, sitecoreEdgeUrl = constants_1.SITECORE_EDGE_URL_DEFAULT) => `${sitecoreEdgeUrl}/v1/files/pages/styles/content-styles.css?sitecoreContextId=${sitecoreEdgeContextId}`;\nexports.getContentStylesheetUrl = getContentStylesheetUrl;\nconst traversePlaceholder = (components, config) => {\n  if (config.loadStyles) return;\n  components.forEach(component => {\n    (0, exports.traverseComponent)(component, config);\n  });\n};\nexports.traversePlaceholder = traversePlaceholder;\nconst traverseField = (field, config) => {\n  if (!field || config.loadStyles) return;\n  if ('editable' in field && field.editable) {\n    config.loadStyles = CLASS_REGEXP.test(field.editable);\n  } else if ('value' in field && typeof field.value === 'string') {\n    config.loadStyles = CLASS_REGEXP.test(field.value);\n  } else if ('fields' in field) {\n    Object.values(field.fields).forEach(field => {\n      (0, exports.traverseField)(field, config);\n    });\n  } else if (Array.isArray(field)) {\n    field.forEach(field => {\n      (0, exports.traverseField)(field, config);\n    });\n  }\n};\nexports.traverseField = traverseField;\nconst traverseComponent = (component, config) => {\n  if (config.loadStyles) return;\n  if ('fields' in component && component.fields) {\n    Object.values(component.fields).forEach(field => {\n      (0, exports.traverseField)(field, config);\n    });\n  }\n  const placeholders = component.placeholders || {};\n  Object.keys(placeholders).forEach(placeholder => {\n    (0, exports.traversePlaceholder)(placeholders[placeholder], config);\n  });\n};\nexports.traverseComponent = traverseComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
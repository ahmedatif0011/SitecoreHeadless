{"ast":null,"code":"// API\nmodule.exports = state;\n\n/**\n * Creates initial state object\n * for iteration over list\n *\n * @param   {array|object} list - list to iterate over\n * @param   {function|null} sortMethod - function to use for keys sort,\n *                                     or `null` to keep them as is\n * @returns {object} - initial state object\n */\nfunction state(list, sortMethod) {\n  var isNamedList = !Array.isArray(list),\n    initState = {\n      index: 0,\n      keyedList: isNamedList || sortMethod ? Object.keys(list) : null,\n      jobs: {},\n      results: isNamedList ? {} : [],\n      size: isNamedList ? Object.keys(list).length : list.length\n    };\n  if (sortMethod) {\n    // sort array keys based on it's values\n    // sort object's keys just on own merit\n    initState.keyedList.sort(isNamedList ? sortMethod : function (a, b) {\n      return sortMethod(list[a], list[b]);\n    });\n  }\n  return initState;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { JssMetaService } from '../../jss-meta.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../jss-meta.service\";\nimport * as i3 from \"@sitecore-jss/sitecore-jss-angular\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../not-found/not-found.component\";\nimport * as i6 from \"../server-error/server-error.component\";\nimport * as i7 from \"../navigation/navigation.component\";\nfunction LayoutComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-scripts\");\n    i0.ɵɵelementStart(2, \"sc-placeholder\", 3);\n    i0.ɵɵlistener(\"loaded\", function LayoutComponent_ng_container_2_Template_sc_placeholder_loaded_2_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPlaceholderLoaded($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"rendering\", ctx_r1.route);\n  }\n}\nfunction LayoutComponent_app_not_found_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-not-found\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"errorContextData\", ctx_r1.errorContextData);\n  }\n}\nfunction LayoutComponent_app_server_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-server-error\");\n  }\n}\nvar LayoutState = /*#__PURE__*/function (LayoutState) {\n  LayoutState[LayoutState[\"Layout\"] = 0] = \"Layout\";\n  LayoutState[LayoutState[\"NotFound\"] = 1] = \"NotFound\";\n  LayoutState[LayoutState[\"Error\"] = 2] = \"Error\";\n  return LayoutState;\n}(LayoutState || {});\nexport let LayoutComponent = /*#__PURE__*/(() => {\n  class LayoutComponent {\n    activatedRoute;\n    meta;\n    route;\n    state;\n    LayoutState = LayoutState;\n    subscription;\n    errorContextData;\n    constructor(activatedRoute, meta) {\n      this.activatedRoute = activatedRoute;\n      this.meta = meta;\n    }\n    ngOnInit() {\n      // route data is populated by the JssRouteResolver\n      this.subscription = this.activatedRoute.data.subscribe(data => {\n        if (!data.jssState) {\n          this.state = LayoutState.NotFound;\n          return;\n        }\n        if (data.jssState.sitecore && data.jssState.sitecore.route) {\n          this.route = data.jssState.sitecore.route;\n          this.setMetadata(this.route.fields);\n          this.state = LayoutState.Layout;\n        }\n        if (data.jssState.routeFetchError) {\n          if (data.jssState.routeFetchError.status >= 400 && data.jssState.routeFetchError.status < 500) {\n            this.state = LayoutState.NotFound;\n          } else {\n            this.state = LayoutState.Error;\n          }\n          this.errorContextData = data.jssState.routeFetchError.data && data.jssState.routeFetchError.data.sitecore;\n        }\n      });\n    }\n    ngOnDestroy() {\n      // important to unsubscribe when the component is destroyed\n      this.subscription.unsubscribe();\n    }\n    setMetadata(routeFields) {\n      // set page title, if it exists\n      if (routeFields && routeFields.pageTitle) {\n        this.meta.setTitle(routeFields.pageTitle.value || 'Page');\n      }\n    }\n    onPlaceholderLoaded(_placeholderName) {\n      // you may optionally hook to the loaded event for a placeholder,\n      // which can be useful for analytics and other DOM-based things that need to know when a placeholder's content is available.\n    }\n    static ɵfac = function LayoutComponent_Factory(t) {\n      return new (t || LayoutComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.JssMetaService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LayoutComponent,\n      selectors: [[\"app-layout\"]],\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"container\"], [4, \"ngIf\"], [3, \"errorContextData\", 4, \"ngIf\"], [\"name\", \"jss-main\", 3, \"loaded\", \"rendering\"], [3, \"errorContextData\"]],\n      template: function LayoutComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-navigation\");\n          i0.ɵɵelementStart(1, \"div\", 0);\n          i0.ɵɵtemplate(2, LayoutComponent_ng_container_2_Template, 3, 1, \"ng-container\", 1)(3, LayoutComponent_app_not_found_3_Template, 1, 1, \"app-not-found\", 2)(4, LayoutComponent_app_server_error_4_Template, 1, 0, \"app-server-error\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.state === ctx.LayoutState.Layout);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.state === ctx.LayoutState.NotFound);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.state === ctx.LayoutState.Error);\n        }\n      },\n      dependencies: [i3.PlaceholderComponent, i4.NgIf, i5.NotFoundComponent, i6.ServerErrorComponent, i7.NavigationComponent],\n      encapsulation: 2\n    });\n  }\n  return LayoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/JSS-APP/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S.\nimport { getBrowserId, getCloudSDKSettingsBrowser as getCloudSDKSettings, getEnabledPackageBrowser as getEnabledPackage, getSettings, handleGetSettingsError } from '@sitecore-cloudsdk/core/internal';\nimport { getCookieValueClientSide } from '@sitecore-cloudsdk/utils';\nimport { ErrorMessages, PACKAGE_NAME } from '../consts';\nimport { awaitInit } from '../init/browser/initializer';\nimport { eventQueue } from './eventStorage';\n/**\n * A function that adds event to the queue\n *\n * @param eventData - The required/optional attributes in order to be send to SitecoreCloud API\n */\nexport function addToEventQueue(_x) {\n  return _addToEventQueue.apply(this, arguments);\n}\nfunction _addToEventQueue() {\n  _addToEventQueue = _asyncToGenerator(function* (eventData) {\n    yield awaitInit();\n    if (getEnabledPackage(PACKAGE_NAME)?.initState) {\n      const settings = getCloudSDKSettings();\n      const id = getCookieValueClientSide(settings.cookieSettings.name.browserId);\n      const queueEventPayload = {\n        eventData,\n        id,\n        settings: settings\n      };\n      eventQueue.enqueueEvent(queueEventPayload);\n    } else {\n      const settings = handleGetSettingsError(getSettings, ErrorMessages.IE_0014);\n      const id = getBrowserId();\n      const queueEventPayload = {\n        eventData,\n        id,\n        settings\n      };\n      eventQueue.enqueueEvent(queueEventPayload);\n    }\n  });\n  return _addToEventQueue.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
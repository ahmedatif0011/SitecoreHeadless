{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JssDataFetcherService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst http_1 = require(\"@angular/common/http\");\nconst rxjs_1 = require(\"rxjs\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"@angular/common/http\"));\nlet JssDataFetcherService = /*#__PURE__*/(() => {\n  class JssDataFetcherService {\n    httpClient;\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.fetch = this.fetch.bind(this);\n    }\n    fetch(url, data) {\n      let result;\n      const options = {\n        withCredentials: true\n      };\n      if (data) {\n        result = this.httpClient.post(url, data, options);\n      } else {\n        result = this.httpClient.get(url, options);\n      }\n      return (0, rxjs_1.lastValueFrom)(result).then(responseData => ({\n        data: responseData,\n        status: 200,\n        statusText: 'OK'\n      })).catch(error => {\n        if (error instanceof Error) {\n          throw error;\n        }\n        return {\n          data: error.error,\n          status: error.status,\n          statusText: error.statusText\n        };\n      });\n    }\n    static ɵfac = function JssDataFetcherService_Factory(t) {\n      return new (t || JssDataFetcherService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JssDataFetcherService,\n      factory: JssDataFetcherService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return JssDataFetcherService;\n})();\nexports.JssDataFetcherService = JssDataFetcherService;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
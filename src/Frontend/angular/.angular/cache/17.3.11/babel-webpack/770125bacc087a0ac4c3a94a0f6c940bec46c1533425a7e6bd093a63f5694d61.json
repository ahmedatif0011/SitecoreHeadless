{"ast":null,"code":"import { TransferState } from '@angular/core';\nimport { EMPTY, of } from 'rxjs';\nimport { JssTranslationLoaderService } from './jss-translation-loader.service';\nimport { dictionaryStateKey } from './jss-translation-server-loader.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./jss-translation-loader.service\";\nexport let JssTranslationClientLoaderService = /*#__PURE__*/(() => {\n  class JssTranslationClientLoaderService {\n    fallbackLoader;\n    transferState;\n    constructor(fallbackLoader, transferState) {\n      this.fallbackLoader = fallbackLoader;\n      this.transferState = transferState;\n    }\n    getTranslation(lang) {\n      const dictionary = this.transferState.get(dictionaryStateKey, null);\n      if (dictionary) {\n        return of(dictionary);\n      }\n      if (!this.fallbackLoader) {\n        return EMPTY;\n      }\n      // likely invoking the JSS translation service here\n      return this.fallbackLoader.getTranslation(lang);\n    }\n    static ɵfac = function JssTranslationClientLoaderService_Factory(t) {\n      return new (t || JssTranslationClientLoaderService)(i0.ɵɵinject(i1.JssTranslationLoaderService), i0.ɵɵinject(i0.TransferState));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JssTranslationClientLoaderService,\n      factory: JssTranslationClientLoaderService.ɵfac\n    });\n  }\n  return JssTranslationClientLoaderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
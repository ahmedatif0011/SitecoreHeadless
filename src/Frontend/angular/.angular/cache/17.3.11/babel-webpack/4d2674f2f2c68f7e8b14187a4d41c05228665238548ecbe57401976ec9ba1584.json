{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AppComponentsSharedModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@angular/common\");\nconst forms_1 = require(\"@angular/forms\");\nconst core_1 = require(\"@ngx-translate/core\");\nconst router_1 = require(\"@angular/router\");\nconst sitecore_jss_angular_1 = require(\"@sitecore-jss/sitecore-jss-angular\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\n/*\n  This module is imported by the generated app-components.module.ts.\n  You can use this module to provide shared Angular components that are not\n  JSS components, etc to the generated module.\n\n  Don't want code generation? See ./.gitignore for instructions to turn it off.\n*/\nlet AppComponentsSharedModule = /*#__PURE__*/(() => {\n  class AppComponentsSharedModule {\n    static ɵfac = function AppComponentsSharedModule_Factory(t) {\n      return new (t || AppComponentsSharedModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppComponentsSharedModule\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [common_1.CommonModule, core_1.TranslateModule, router_1.RouterModule, sitecore_jss_angular_1.JssModule, forms_1.FormsModule, common_1.CommonModule, core_1.TranslateModule, router_1.RouterModule, forms_1.FormsModule]\n    });\n  }\n  return AppComponentsSharedModule;\n})();\nexports.AppComponentsSharedModule = AppComponentsSharedModule;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
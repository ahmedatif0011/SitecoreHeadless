{"ast":null,"code":"import { Directive, Input } from '@angular/core';\nimport { LinkDirective } from './link.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let RouterLinkDirective = /*#__PURE__*/(() => {\n  class RouterLinkDirective extends LinkDirective {\n    router;\n    editable = true;\n    attrs = {};\n    field;\n    /**\n     * Custom template to render in Pages in Metadata edit mode if field value is empty\n     */\n    emptyFieldEditingTemplate;\n    constructor(viewContainer, templateRef, renderer, elementRef, router) {\n      super(viewContainer, templateRef, renderer, elementRef);\n      this.router = router;\n    }\n    renderTemplate(props, linkText) {\n      const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n      viewRef.rootNodes.forEach(node => {\n        Object.entries(props).forEach(([key, propValue]) => {\n          this.updateAttribute(node, key, propValue);\n          if (key === 'href') {\n            this.renderer.listen(node, 'click', event => {\n              this.router.navigateByUrl(propValue);\n              // shouldn't prevent default if the link includes a fragment\n              if (!propValue.includes('#')) {\n                event.preventDefault();\n              }\n            });\n          }\n        });\n        if (node.childNodes && node.childNodes.length === 0 && linkText) {\n          node.textContent = linkText;\n        }\n      });\n    }\n    static ɵfac = function RouterLinkDirective_Factory(t) {\n      return new (t || RouterLinkDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Router));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: RouterLinkDirective,\n      selectors: [[\"\", \"scRouterLink\", \"\"]],\n      inputs: {\n        editable: [i0.ɵɵInputFlags.None, \"scRouterLinkEditable\", \"editable\"],\n        attrs: [i0.ɵɵInputFlags.None, \"scRouterLinkAttrs\", \"attrs\"],\n        field: [i0.ɵɵInputFlags.None, \"scRouterLink\", \"field\"],\n        emptyFieldEditingTemplate: [i0.ɵɵInputFlags.None, \"scRouterLinkEmptyFieldEditingTemplate\", \"emptyFieldEditingTemplate\"]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return RouterLinkDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLWxpbmsuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvcm91dGVyLWxpbmsuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBRVQsS0FBSyxHQUlOLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7O0FBSWpELE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxhQUFhO0lBbUIxQztJQWxCcUIsUUFBUSxHQUFHLElBQUksQ0FBQztJQUVuQixLQUFLLEdBQStCLEVBQUUsQ0FBQztJQUVwQyxLQUFLLENBQVk7SUFFaEQ7O09BRUc7SUFDcUQseUJBQXlCLENBRS9FO0lBRUYsWUFDRSxhQUErQixFQUMvQixXQUFpQyxFQUNqQyxRQUFtQixFQUNuQixVQUFzQixFQUNkLE1BQWM7UUFFdEIsS0FBSyxDQUFDLGFBQWEsRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBRmhELFdBQU0sR0FBTixNQUFNLENBQVE7SUFHeEIsQ0FBQztJQUVTLGNBQWMsQ0FBQyxLQUFpQyxFQUFFLFFBQWdCO1FBQzFFLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBRXhFLE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDakMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsRUFBRSxFQUFFO2dCQUNqRCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7Z0JBRTNDLElBQUksR0FBRyxLQUFLLE1BQU0sRUFBRSxDQUFDO29CQUNuQixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7d0JBQzVDLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO3dCQUVyQyw0REFBNEQ7d0JBQzVELElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUM7NEJBQzdCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQzt3QkFDekIsQ0FBQztvQkFDSCxDQUFDLENBQUMsQ0FBQztnQkFDTCxDQUFDO1lBQ0gsQ0FBQyxDQUFDLENBQUM7WUFFSCxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLFFBQVEsRUFBRSxDQUFDO2dCQUNoRSxJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQztZQUM5QixDQUFDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO3dHQS9DVSxtQkFBbUI7NEZBQW5CLG1CQUFtQjs7NEZBQW5CLG1CQUFtQjtrQkFEL0IsU0FBUzttQkFBQyxFQUFFLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRTtxTEFFUixRQUFRO3NCQUF0QyxLQUFLO3VCQUFDLHNCQUFzQjtnQkFFRCxLQUFLO3NCQUFoQyxLQUFLO3VCQUFDLG1CQUFtQjtnQkFFSyxLQUFLO3NCQUFuQyxLQUFLO3VCQUFDLGNBQWM7Z0JBS21DLHlCQUF5QjtzQkFBaEYsS0FBSzt1QkFBQyx1Q0FBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIERpcmVjdGl2ZSxcclxuICBFbGVtZW50UmVmLFxyXG4gIElucHV0LFxyXG4gIFJlbmRlcmVyMixcclxuICBUZW1wbGF0ZVJlZixcclxuICBWaWV3Q29udGFpbmVyUmVmLFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBMaW5rRGlyZWN0aXZlIH0gZnJvbSAnLi9saW5rLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IExpbmtGaWVsZCB9IGZyb20gJy4vcmVuZGVyaW5nLWZpZWxkJztcclxuXHJcbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1tzY1JvdXRlckxpbmtdJyB9KVxyXG5leHBvcnQgY2xhc3MgUm91dGVyTGlua0RpcmVjdGl2ZSBleHRlbmRzIExpbmtEaXJlY3RpdmUge1xyXG4gIEBJbnB1dCgnc2NSb3V0ZXJMaW5rRWRpdGFibGUnKSBlZGl0YWJsZSA9IHRydWU7XHJcblxyXG4gIEBJbnB1dCgnc2NSb3V0ZXJMaW5rQXR0cnMnKSBhdHRyczogeyBbYXR0cjogc3RyaW5nXTogc3RyaW5nIH0gPSB7fTtcclxuXHJcbiAgQElucHV0KCdzY1JvdXRlckxpbmsnKSBkZWNsYXJlIGZpZWxkOiBMaW5rRmllbGQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIEN1c3RvbSB0ZW1wbGF0ZSB0byByZW5kZXIgaW4gUGFnZXMgaW4gTWV0YWRhdGEgZWRpdCBtb2RlIGlmIGZpZWxkIHZhbHVlIGlzIGVtcHR5XHJcbiAgICovXHJcbiAgQElucHV0KCdzY1JvdXRlckxpbmtFbXB0eUZpZWxkRWRpdGluZ1RlbXBsYXRlJykgZGVjbGFyZSBlbXB0eUZpZWxkRWRpdGluZ1RlbXBsYXRlOiBUZW1wbGF0ZVJlZjxcclxuICAgIHVua25vd25cclxuICA+O1xyXG5cclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsXHJcbiAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8dW5rbm93bj4sXHJcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyLFxyXG4gICAgZWxlbWVudFJlZjogRWxlbWVudFJlZixcclxuICAgIHByaXZhdGUgcm91dGVyOiBSb3V0ZXJcclxuICApIHtcclxuICAgIHN1cGVyKHZpZXdDb250YWluZXIsIHRlbXBsYXRlUmVmLCByZW5kZXJlciwgZWxlbWVudFJlZik7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgcmVuZGVyVGVtcGxhdGUocHJvcHM6IHsgW3Byb3A6IHN0cmluZ106IHN0cmluZyB9LCBsaW5rVGV4dDogc3RyaW5nKSB7XHJcbiAgICBjb25zdCB2aWV3UmVmID0gdGhpcy52aWV3Q29udGFpbmVyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlUmVmKTtcclxuXHJcbiAgICB2aWV3UmVmLnJvb3ROb2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XHJcbiAgICAgIE9iamVjdC5lbnRyaWVzKHByb3BzKS5mb3JFYWNoKChba2V5LCBwcm9wVmFsdWVdKSA9PiB7XHJcbiAgICAgICAgdGhpcy51cGRhdGVBdHRyaWJ1dGUobm9kZSwga2V5LCBwcm9wVmFsdWUpO1xyXG5cclxuICAgICAgICBpZiAoa2V5ID09PSAnaHJlZicpIHtcclxuICAgICAgICAgIHRoaXMucmVuZGVyZXIubGlzdGVuKG5vZGUsICdjbGljaycsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZUJ5VXJsKHByb3BWYWx1ZSk7XHJcblxyXG4gICAgICAgICAgICAvLyBzaG91bGRuJ3QgcHJldmVudCBkZWZhdWx0IGlmIHRoZSBsaW5rIGluY2x1ZGVzIGEgZnJhZ21lbnRcclxuICAgICAgICAgICAgaWYgKCFwcm9wVmFsdWUuaW5jbHVkZXMoJyMnKSkge1xyXG4gICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcblxyXG4gICAgICBpZiAobm9kZS5jaGlsZE5vZGVzICYmIG5vZGUuY2hpbGROb2Rlcy5sZW5ndGggPT09IDAgJiYgbGlua1RleHQpIHtcclxuICAgICAgICBub2RlLnRleHRDb250ZW50ID0gbGlua1RleHQ7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
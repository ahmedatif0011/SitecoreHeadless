{"ast":null,"code":"import _asyncToGenerator from \"D:/JSS-APP/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { getBrowserId, getCloudSDKSettingsBrowser as getCloudSDKSettings, getEnabledPackageBrowser as getEnabledPackage, getSettings, handleGetSettingsError } from '@sitecore-cloudsdk/core/internal';\nimport { getCookieValueClientSide } from '@sitecore-cloudsdk/utils';\nimport { ErrorMessages, PACKAGE_NAME } from '../../consts';\nimport { awaitInit } from '../../init/browser/initializer';\nimport { sendEvent } from '../send-event/sendEvent';\nimport { IdentityEvent } from './identity-event';\n/**\n * A function that sends an IDENTITY event to SitecoreCloud API\n *\n * @param eventData - The required/optional attributes in order to be send to SitecoreCloud API\n * @returns The response object that Sitecore EP returns\n */\nexport function identity(_x) {\n  return _identity.apply(this, arguments);\n}\nfunction _identity() {\n  _identity = _asyncToGenerator(function* (identityData) {\n    yield awaitInit();\n    if (getEnabledPackage(PACKAGE_NAME)?.initState) {\n      const settings = getCloudSDKSettings();\n      const id = getCookieValueClientSide(settings.cookieSettings.name.browserId);\n      return new IdentityEvent({\n        id,\n        identityData,\n        sendEvent,\n        settings: settings\n      }).send();\n    } else {\n      const settings = handleGetSettingsError(getSettings, ErrorMessages.IE_0014);\n      const id = getBrowserId();\n      return new IdentityEvent({\n        id,\n        identityData,\n        sendEvent,\n        settings\n      }).send();\n    }\n  });\n  return _identity.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StyleguideEditFrameComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst sitecore_jss_angular_1 = require(\"@sitecore-jss/sitecore-jss-angular\");\nconst jss_context_service_1 = require(\"../../jss-context.service\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../jss-context.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i3 = tslib_1.__importStar(require(\"../shared/styleguide-specimen/styleguide-specimen.component\"));\nconst i4 = tslib_1.__importStar(require(\"@sitecore-jss/sitecore-jss-angular\"));\nconst _c0 = [\"*\"];\nconst _c1 = a0 => ({\n  \"color\": a0\n});\nfunction StyleguideEditFrameComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const contentItem_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(contentItem_r1.fields.title == null ? null : contentItem_r1.fields.title.value);\n  }\n}\n/**\n * A sample component to describe Edit Frame usage with JSS.\n * Edit Frame would simply output child content in normal mode.\n * In editing mode it will output markup for Edit Frame that will wrap the child content.\n * Edit buttons, custom CSS and datasource can be applied.\n */\nlet StyleguideEditFrameComponent = /*#__PURE__*/(() => {\n  class StyleguideEditFrameComponent {\n    jssContext;\n    rendering;\n    context;\n    editFrameProps;\n    applyRed;\n    editFrameButtons = [{\n      header: 'WebEditButton',\n      icon: '/~/icon/Office/16x16/document_selection.png',\n      click: 'javascript:alert(\"An edit frame button was just clicked! You can also use chrome: and webedit: commands with it!\")',\n      tooltip: 'Doesnt do much, just a web edit button example'\n    },\n    // use javascript:, webedit: or chrome: commands for webedit buttons\n    {\n      header: 'FieldEditButton',\n      icon: '/~/icon/Office/16x16/pencil.png',\n      fields: ['applyRedToText', 'sampleList'],\n      tooltip: 'Allows you to open field editor for specified fields'\n    } // or use field edit buttons to open Field Editor\n    ];\n    constructor(jssContext) {\n      this.jssContext = jssContext;\n    }\n    ngOnInit() {\n      this.jssContext.state.subscribe(state => {\n        this.context = state.sitecore;\n      });\n      this.applyRed = (0, sitecore_jss_angular_1.getFieldValue)(this.rendering, 'applyRedToText') ? true : false;\n      this.editFrameProps = this.getEditFrameProps(this.rendering.dataSource);\n    }\n    getEditFrameProps(dataSource) {\n      return {\n        dataSource: dataSource ? {\n          itemId: dataSource\n          // databaseName: 'web',\n          // language: 'en', // optional params you can also set for datasource\n        } : undefined,\n        // datasource will set the item to be edited by edit frame\n        buttons: this.editFrameButtons,\n        // add custom editing functionality or edit field sets with buttons\n        title: 'jssEditFrame',\n        tooltip: 'Perform editing anywhere while not tied to a rendering, placeholder or field',\n        cssClass: 'jss-edit-frame',\n        // customize edit frame appearance through CSS\n        parameters: {},\n        // set additional parameters when needed\n        sitecore: this.context\n      };\n    }\n    static ɵfac = function StyleguideEditFrameComponent_Factory(t) {\n      return new (t || StyleguideEditFrameComponent)(i0.ɵɵdirectiveInject(i1.JssContextService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StyleguideEditFrameComponent,\n      selectors: [[\"app-styleguide-edit-frame\"]],\n      inputs: {\n        rendering: \"rendering\"\n      },\n      ngContentSelectors: _c0,\n      decls: 15,\n      vars: 12,\n      consts: [[\"e2eId\", \"styleguide-edit-frame\", 3, \"rendering\"], [3, \"dataSource\", \"buttons\", \"title\", \"tooltip\", \"cssClass\", \"parameters\", \"sitecore\"], [3, \"ngStyle\"], [4, \"ngFor\", \"ngForOf\"]],\n      template: function StyleguideEditFrameComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"app-styleguide-specimen\", 0)(1, \"sc-edit-frame\", 1);\n          i0.ɵɵtext(2, \" This is the content that will be wrapped by edit frame in Experience Editor.\");\n          i0.ɵɵelement(3, \"br\");\n          i0.ɵɵtext(4, \" Try out the custom webedit buttons for a variety of tasks like executing javascript, or webedit commands. \");\n          i0.ɵɵelement(5, \"br\");\n          i0.ɵɵtext(6, \" Or use field edit buttons to author fields that are not usually editable in Experience Editor.\");\n          i0.ɵɵelement(7, \"br\")(8, \"br\");\n          i0.ɵɵelementStart(9, \"p\", 2);\n          i0.ɵɵtext(10, \"This text will change color. Use the field edit button to change its appearance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(11, \" This list can be changed via field editor: \");\n          i0.ɵɵelementStart(12, \"ul\");\n          i0.ɵɵtemplate(13, StyleguideEditFrameComponent_li_13_Template, 2, 1, \"li\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵprojection(14);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"rendering\", ctx.rendering);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"dataSource\", ctx.editFrameProps.dataSource)(\"buttons\", ctx.editFrameProps.buttons)(\"title\", ctx.editFrameProps.title)(\"tooltip\", ctx.editFrameProps.tooltip)(\"cssClass\", ctx.editFrameProps.cssClass)(\"parameters\", ctx.editFrameProps.parameters)(\"sitecore\", ctx.context);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(10, _c1, ctx.applyRed ? \"red\" : \"blue\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.rendering.fields.sampleList);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgStyle, i3.StyleguideSpecimenComponent, i4.EditFrameComponent],\n      encapsulation: 2\n    });\n  }\n  return StyleguideEditFrameComponent;\n})();\nexports.StyleguideEditFrameComponent = StyleguideEditFrameComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
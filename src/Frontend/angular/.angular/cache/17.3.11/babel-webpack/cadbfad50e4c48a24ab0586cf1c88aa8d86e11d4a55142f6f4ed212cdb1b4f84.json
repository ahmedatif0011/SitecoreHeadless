{"ast":null,"code":"import _asyncToGenerator from \"D:/JSS-APP/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CORE_NAMESPACE } from '../debug/namespaces';\nimport { ErrorMessages } from '../consts';\nimport { createCookies } from '../cookie/create-cookies';\nimport { createSettings } from '../settings/create-settings';\nimport { debug } from '../debug/debug';\n/**\n * Internal settings object to be used by all functions in module caching.\n * It starts with a null value and is set to the proper object by the  function. *\n * Can be retrieved only through the  function.\n */\nlet coreSettings = null;\n/**\n * Retrieves the core settings object.\n *\n * This function ensures that the core settings have been initialized and contain essential properties\n * like `clientKey`, `cookieSettings`, and `targetURL`.\n *\n * @returns The core settings object.\n * @throws Error if the core settings haven't been initialized with the required properties.\n */\nexport function getSettings() {\n  if (!coreSettings) throw Error(ErrorMessages.IE_0008);\n  return coreSettings;\n}\nlet createCookiesPromise = null;\n/* eslint-disable max-len */\n/**\n * Initializes the core settings for browser-based applications.\n *\n * This function initializes core settings for the application,\n * including creating settings and handling cookies if enabled.\n *\n * @param settingsInput - The settings input to configure the core settings.\n * @returns A Promise that resolves when initialization is complete.\n * @deprecated Cloud SDK v0.4 introduces a new initialization logic. If you are upgrading from v0.3, we recommend that you upgrade your initialization code.The v0.3 initialization logic is now deprecated and will be removed in a future Cloud SDK release.\n */\n/* eslint-enable max-len */\nexport function initCore(_x) {\n  return _initCore.apply(this, arguments);\n}\n/**\n * Helper functions for tests\n */\nfunction _initCore() {\n  _initCore = _asyncToGenerator(function* (settingsInput) {\n    debug(CORE_NAMESPACE)('coreClient library initialized');\n    if (coreSettings === null) coreSettings = createSettings(settingsInput);\n    if (settingsInput.enableBrowserCookie && createCookiesPromise === null) createCookiesPromise = createCookies(coreSettings);\n    yield createCookiesPromise;\n  });\n  return _initCore.apply(this, arguments);\n}\nexport function setCoreSettings(settings) {\n  coreSettings = settings;\n}\nexport function setCookiePromise(promise) {\n  createCookiesPromise = promise;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
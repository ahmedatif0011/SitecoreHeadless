{"ast":null,"code":"import _asyncToGenerator from \"D:/JSS-APP/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S.\nimport { CORE_NAMESPACE } from '../debug/namespaces';\nimport { ErrorMessages } from '../consts';\nimport { createSettings } from '../settings/create-settings';\nimport { debug } from '../debug/debug';\nimport { handleServerCookie } from '../cookie/handle-server-cookie';\n/**\n * Internal settings object to be used by all functions in module caching.\n * It starts with a null value and is set to the proper object by the  function. *\n * Can be retrieved only through the  function.\n */\nlet coreSettings = null;\nexport function setCoreSettings(settings) {\n  coreSettings = settings;\n}\n/* eslint-disable max-len */\n/**\n * Initializes the core settings for browser-based applications.\n *\n * This function initializes core settings for the application,\n * including creating settings and handling cookies if enabled.\n *\n * @param settingsInput - The settings input to configure the core settings.\n * @returns A Promise that resolves when initialization is complete.\n * @deprecated Cloud SDK v0.4 introduces a new initialization logic. If you are upgrading from v0.3, we recommend that you upgrade your initialization code.The v0.3 initialization logic is now deprecated and will be removed in a future Cloud SDK release.\n */\n/* eslint-enable max-len */\nexport function getSettingsServer() {\n  if (!coreSettings) throw Error(ErrorMessages.IE_0008);\n  return coreSettings;\n}\n/**\n * Initializes the core settings for browser-based applications.\n *\n * This function initializes core settings for the application,\n * including creating settings and handling cookies if enabled.\n *\n * @param settingsInput - The settings input to configure the core settings.\n * @param request - A request object of type HttpRequest or MiddlewareRequest\n * @param response - A response object of type HttpResponse or MiddlewareNextResponse\n * @returns A Promise that resolves when initialization is complete.\n */\nexport function initCoreServer(_x, _x2, _x3) {\n  return _initCoreServer.apply(this, arguments);\n}\nfunction _initCoreServer() {\n  _initCoreServer = _asyncToGenerator(function* (settingsInput, request, response) {\n    debug(CORE_NAMESPACE)('initializing %o', 'initCoreServer initialized');\n    if (!coreSettings) coreSettings = createSettings(settingsInput);\n    if (settingsInput.enableServerCookie) yield handleServerCookie(request, response, settingsInput.timeout);\n  });\n  return _initCoreServer.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
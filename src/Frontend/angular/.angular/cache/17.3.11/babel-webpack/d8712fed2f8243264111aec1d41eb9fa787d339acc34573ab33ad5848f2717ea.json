{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { RouterModule, UrlSegment } from '@angular/router';\nimport { LayoutComponent } from './layout/layout.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ServerErrorComponent } from './server-error/server-error.component';\nimport { jssRouteResolver } from './jss-route-resolver.service';\nimport { JssRouteBuilderService } from './jss-route-builder.service';\nimport { JssModule } from '@sitecore-jss/sitecore-jss-angular';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ScriptsModule } from './scripts/scripts.module';\nexport function jssRouteMatcher(url) {\n  // use the route builder to parse out language / server route\n  const routeParser = new JssRouteBuilderService();\n  const route = routeParser.parseRouteUrl(url.map(segment => segment.toString()));\n  if (route == null) {\n    return null;\n  }\n  // convert props to route parameters\n  const posParams = {};\n  Object.keys(route).forEach(key => {\n    posParams[key] = new UrlSegment(route[key], null);\n  });\n  return {\n    consumed: url,\n    posParams\n  };\n}\nconst routes = [{\n  path: 'NotFound',\n  component: NotFoundComponent\n}, {\n  path: 'ServerError',\n  component: ServerErrorComponent\n}, {\n  // matcher is effectively a catch-all route\n  matcher: jssRouteMatcher,\n  component: LayoutComponent,\n  resolve: {\n    jssState: jssRouteResolver\n  },\n  runGuardsAndResolvers: 'always'\n}];\nlet RoutingModule = class RoutingModule {};\nRoutingModule = __decorate([NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    onSameUrlNavigation: 'reload',\n    initialNavigation: 'enabledBlocking'\n  }), JssModule, TranslateModule, BrowserModule, ScriptsModule],\n  exports: [RouterModule, TranslateModule],\n  declarations: [NotFoundComponent, ServerErrorComponent, LayoutComponent, NavigationComponent],\n  providers: [JssRouteBuilderService]\n})], RoutingModule);\nexport { RoutingModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
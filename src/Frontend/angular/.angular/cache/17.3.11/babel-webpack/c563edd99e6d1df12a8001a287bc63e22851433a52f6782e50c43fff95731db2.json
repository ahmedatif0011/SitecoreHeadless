{"ast":null,"code":"import _asyncToGenerator from \"D:/JSS-APP/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S.\nimport { isHttpRequest, isHttpResponse, isNextJsMiddlewareRequest, isNextJsMiddlewareResponse } from '@sitecore-cloudsdk/utils';\nimport { getSettingsServer } from '../init/init-core-server';\nimport { handleHttpCookie } from './handle-http-cookie';\nimport { handleNextJsMiddlewareCookie } from './handle-next-js-middleware-cookie';\n/**\n * Handles server-side cookie operations based on the provided 'request' and 'response' objects.\n *\n * @param request - The request object, either a Middleware Request or an HTTP Request.\n * @param response - The response object, either a Middleware Next Response or an HTTP Response.\n * @param timeout - The timeout for the call to proxy to get browserId.\n * @returns A Promise that resolves once the cookie handling is complete.\n */\nexport function handleServerCookie(_x, _x2, _x3) {\n  return _handleServerCookie.apply(this, arguments);\n}\nfunction _handleServerCookie() {\n  _handleServerCookie = _asyncToGenerator(function* (request, response, timeout) {\n    const settings = getSettingsServer();\n    if (isNextJsMiddlewareRequest(request) && isNextJsMiddlewareResponse(response)) yield handleNextJsMiddlewareCookie(request, response, settings, timeout);else if (isHttpRequest(request) && isHttpResponse(response)) yield handleHttpCookie(request, response, settings, timeout);\n  });\n  return _handleServerCookie.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _asyncToGenerator from \"D:/JSS-APP/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S.\nimport { API_VERSION, ErrorMessages, LIBRARY_VERSION } from '../consts';\n/**\n * A function that gets the guest ref from EP.\n * @param browserId - The browser id of the client\n * @param sitecoreEdgeContextId - The sitecoreEdgeContextId\n * @returns - A promise that resolves with the guest ref\n * @throws - Will throw an error if the clientKey/browser id is invalid\n */\nexport function getGuestId(_x, _x2, _x3) {\n  return _getGuestId.apply(this, arguments);\n}\nfunction _getGuestId() {\n  _getGuestId = _asyncToGenerator(function* (browserId, sitecoreEdgeContextId, sitecoreEdgeUrl) {\n    // eslint-disable-next-line max-len\n    const url = `${sitecoreEdgeUrl}/v1/events/${API_VERSION}/browser/${browserId}/show.json?sitecoreContextId=${sitecoreEdgeContextId}&client_key=&api_token=`;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const response = yield fetch(url, {\n      headers: {\n        'X-Library-Version': LIBRARY_VERSION\n      }\n    });\n    const data = yield response.json();\n    if (!response.ok) {\n      const {\n        error_msg: errorMsg,\n        moreInfo\n      } = data;\n      throw new Error(`${errorMsg}, for more info: ${moreInfo}`);\n    }\n    if (!data.customer.ref) throw new Error(ErrorMessages.IE_0011);\n    return data.customer.ref;\n  });\n  return _getGuestId.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
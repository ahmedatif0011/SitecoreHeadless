{"ast":null,"code":"import { environment as env } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class JssRoute {\n  language;\n  serverRoute;\n}\nexport let JssRouteBuilderService = /*#__PURE__*/(() => {\n  class JssRouteBuilderService {\n    buildRouteUrl(route) {\n      if (!route.language) {\n        route.language = env.defaultLanguage;\n      }\n      if (!route.serverRoute) {\n        route.serverRoute = env.defaultServerRoute;\n      }\n      return `/${route.language}${route.serverRoute}`;\n    }\n    parseRouteUrl(url, isSSR) {\n      const route = new JssRoute();\n      // In case if we are in SSR, server will extract language from cookies\n      route.language = isSSR ? undefined : env.defaultLanguage;\n      route.serverRoute = env.defaultServerRoute;\n      if (url.length === 0) {\n        return route;\n      }\n      const languageRegex = /^([a-zA-Z]{2})(-[a-zA-Z]{2})?$/; // e.g. 'en' or 'en-GB'\n      let languageSegment = url[0].toString();\n      if (languageSegment.match(languageRegex)) {\n        languageSegment = languageSegment.replace(languageRegex, function (_v, p1, p2) {\n          if (p2) {\n            // DA-dk -> da-DK\n            return p1.toLowerCase() + p2.toUpperCase();\n          }\n          // EN -> en\n          return p1.toLowerCase();\n        });\n        route.language = languageSegment;\n        route.serverRoute = url.length > 1 ? url.slice(1).join('/') : env.defaultServerRoute;\n      } else {\n        route.serverRoute = url.join('/');\n      }\n      if (!route.serverRoute.startsWith('/')) {\n        route.serverRoute = '/' + route.serverRoute;\n      }\n      return route;\n    }\n    static ɵfac = function JssRouteBuilderService_Factory(t) {\n      return new (t || JssRouteBuilderService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JssRouteBuilderService,\n      factory: JssRouteBuilderService.ɵfac\n    });\n  }\n  return JssRouteBuilderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
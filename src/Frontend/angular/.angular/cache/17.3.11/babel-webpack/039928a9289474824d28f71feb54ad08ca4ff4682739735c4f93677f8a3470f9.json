{"ast":null,"code":"import _asyncToGenerator from \"D:/JSS-APP/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S.\nimport { ErrorMessages } from './consts';\n/**\n * Fetches data from the specified URL within the given timeout period.\n *\n * @param url - The URL to fetch data from.\n * @param timeout - The time in milliseconds to wait before timing out the request.\n * @param fetchOptions - The options to pass to the fetch API.\n * @returns - A Promise that resolves to the fetched data, or null if the request was aborted or timed out.\n * @throws  - If the timeout value is invalid.\n */\nexport function fetchWithTimeout(_x, _x2, _x3) {\n  return _fetchWithTimeout.apply(this, arguments);\n}\nfunction _fetchWithTimeout() {\n  _fetchWithTimeout = _asyncToGenerator(function* (url, timeout, fetchOptions) {\n    if (!Number.isInteger(timeout) || timeout < 0) throw new Error(ErrorMessages.IV_0006);\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    const timeoutHandler = setTimeout(() => {\n      abortController.abort();\n    }, timeout);\n    return fetch(url, {\n      ...fetchOptions,\n      signal\n    }).then(response => {\n      clearTimeout(timeoutHandler);\n      return response;\n    }).catch(error => {\n      if (error.name === 'AbortError') throw new Error(ErrorMessages.IE_0002);\n      return null;\n    });\n  });\n  return _fetchWithTimeout.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
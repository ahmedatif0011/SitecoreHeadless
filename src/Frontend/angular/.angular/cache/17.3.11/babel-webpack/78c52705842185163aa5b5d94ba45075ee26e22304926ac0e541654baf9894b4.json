{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VisitorIdentificationComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst jss_context_service_1 = require(\"../../../jss-context.service\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../../jss-context.service\"));\nfunction VisitorIdentificationComponent_meta_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"meta\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"content\", ctx_r0.visitorIdentificationTimestamp);\n  }\n}\nlet emittedVI = false;\n/**\n  VisitorIdentification is necessary for Sitecore Analytics to determine if the visitor is a robot.\n  If Sitecore XP (with xConnect/xDB) is used, this is required or else analytics will not be collected for the JSS app.\n  For XM (CMS-only) apps, this should be removed.\n\n  VI detection only runs once for a given analytics ID, so this is not a recurring operation once cookies are established.\n */\nlet VisitorIdentificationComponent = /*#__PURE__*/(() => {\n  class VisitorIdentificationComponent {\n    jssContext;\n    visitorIdentificationTimestamp;\n    contextSubscription;\n    // inject the JssContextService, which maintains the current Sitecore Context\n    constructor(jssContext) {\n      this.jssContext = jssContext;\n    }\n    ngOnInit() {\n      this.contextSubscription = this.jssContext.state.subscribe(state => {\n        if (state.sitecore && state.sitecore.context) {\n          if (!emittedVI && typeof document !== 'undefined' && state.sitecore.context.visitorIdentificationTimestamp) {\n            emittedVI = true;\n            const script = document.createElement('script');\n            script.src = `/layouts/system/VisitorIdentification.js`;\n            script.type = 'text/javascript';\n            document.getElementsByTagName('head')[0].appendChild(script);\n          }\n          this.visitorIdentificationTimestamp = state.sitecore.context.visitorIdentificationTimestamp;\n        }\n      });\n    }\n    ngOnDestroy() {\n      if (this.contextSubscription) {\n        this.contextSubscription.unsubscribe();\n      }\n    }\n    static ɵfac = function VisitorIdentificationComponent_Factory(t) {\n      return new (t || VisitorIdentificationComponent)(i0.ɵɵdirectiveInject(i1.JssContextService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VisitorIdentificationComponent,\n      selectors: [[\"app-visitor-identification\"]],\n      decls: 1,\n      vars: 1,\n      consts: [[\"name\", \"VIcurrentDateTime\", 3, \"content\", 4, \"ngIf\"], [\"name\", \"VIcurrentDateTime\", 3, \"content\"]],\n      template: function VisitorIdentificationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, VisitorIdentificationComponent_meta_0_Template, 1, 1, \"meta\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.visitorIdentificationTimestamp);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return VisitorIdentificationComponent;\n})();\nexports.VisitorIdentificationComponent = VisitorIdentificationComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/styleguide-specimen/styleguide-specimen.component\";\nexport let StyleguideAngularLazyLoadingComponent = /*#__PURE__*/(() => {\n  class StyleguideAngularLazyLoadingComponent {\n    rendering;\n    constructor() {}\n    static ɵfac = function StyleguideAngularLazyLoadingComponent_Factory(t) {\n      return new (t || StyleguideAngularLazyLoadingComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StyleguideAngularLazyLoadingComponent,\n      selectors: [[\"app-styleguide-angular-lazy-loading\"]],\n      inputs: {\n        rendering: \"rendering\"\n      },\n      decls: 13,\n      vars: 1,\n      consts: [[3, \"rendering\"]],\n      template: function StyleguideAngularLazyLoadingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"app-styleguide-specimen\", 0)(1, \"p\");\n          i0.ɵɵtext(2, \"JSS can \");\n          i0.ɵɵelementStart(3, \"em\");\n          i0.ɵɵtext(4, \"lazy-load\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(5, \" Angular components. This removes them from the main app JS bundle, reducing its size. Lazy-loading is very good for components that are used on few routes, since they are not downloaded until used on a route. This can greatly improve initial page load times.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"p\");\n          i0.ɵɵtext(7, \"This works very similarly to route-based Angular lazy-loading, but for an individual component. The component has its own Angular module defined for it, and the loader is added as lazy instead.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\");\n          i0.ɵɵtext(9, \"To see this lazy loading working, inspect network traffic in your browser's dev tools, and look for \");\n          i0.ɵɵelementStart(10, \"code\");\n          i0.ɵɵtext(11, \"styleguide-angular-lazy-loading-styleguide-angular-lazy-loading-module.js\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(12, \" (in production mode, the file name will be hash value), which is the request that loads this component's JS.\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"rendering\", ctx.rendering);\n        }\n      },\n      dependencies: [i1.StyleguideSpecimenComponent],\n      encapsulation: 2\n    });\n  }\n  return StyleguideAngularLazyLoadingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
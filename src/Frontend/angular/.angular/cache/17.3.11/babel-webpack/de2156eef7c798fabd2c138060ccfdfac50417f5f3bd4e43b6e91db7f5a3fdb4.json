{"ast":null,"code":"import { JssModule } from '@sitecore-jss/sitecore-jss-angular';\nimport { StyleguideAngularLazyLoadingComponent } from './styleguide-angular-lazy-loading.component';\nimport { AppComponentsSharedModule } from '../app-components.shared.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@sitecore-jss/sitecore-jss-angular\";\n// By default, the presence of a module in a component folder like this one makes JSS\n// lazy-load the component. This module works a lot like angular route-based lazy loading.\nexport let StyleguideAngularLazyLoadingModule = /*#__PURE__*/(() => {\n  class StyleguideAngularLazyLoadingModule {\n    static ɵfac = function StyleguideAngularLazyLoadingModule_Factory(t) {\n      return new (t || StyleguideAngularLazyLoadingModule)();\n    };\n    static ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: StyleguideAngularLazyLoadingModule\n    });\n    static ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [\n      // this call signals to JSS that this component is the one being lazy loaded by this module\n      JssModule.forChild(StyleguideAngularLazyLoadingComponent), AppComponentsSharedModule]\n    });\n  }\n  return StyleguideAngularLazyLoadingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
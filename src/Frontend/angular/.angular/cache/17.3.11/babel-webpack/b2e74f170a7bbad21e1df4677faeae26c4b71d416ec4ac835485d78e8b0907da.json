{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GraphQLConnectedDemoComponent = void 0;\nconst tslib_1 = require(\"tslib\");\nconst jss_graphql_service_1 = require(\"../../jss-graphql.service\");\nconst i0 = tslib_1.__importStar(require(\"@angular/core\"));\nconst i1 = tslib_1.__importStar(require(\"../../jss-graphql.service\"));\nconst i2 = tslib_1.__importStar(require(\"@angular/common\"));\nconst i3 = tslib_1.__importStar(require(\"@angular/router\"));\nconst i4 = tslib_1.__importStar(require(\"@sitecore-jss/sitecore-jss-angular\"));\nfunction GraphQLConnectedDemoComponent_div_8_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction GraphQLConnectedDemoComponent_div_8_a_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"a\");\n  }\n}\nfunction GraphQLConnectedDemoComponent_div_8_li_38_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\");\n  }\n}\nfunction GraphQLConnectedDemoComponent_div_8_li_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" (editable title too! \");\n    i0.ɵɵtemplate(4, GraphQLConnectedDemoComponent_div_8_li_38_span_4_Template, 1, 0, \"span\", 3);\n    i0.ɵɵtext(5, \") \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const child_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"routerLink\", child_r1.url.path);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(child_r1.pageTitle.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"scText\", child_r1.pageTitle.jsonValue);\n  }\n}\nfunction GraphQLConnectedDemoComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"h4\");\n    i0.ɵɵtext(3, \"Datasource Item (via Connected GraphQL)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelement(7, \"br\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵtext(10, \" sample1 (editable): \");\n    i0.ɵɵtemplate(11, GraphQLConnectedDemoComponent_div_8_span_11_Template, 1, 0, \"span\", 3);\n    i0.ɵɵelement(12, \"br\");\n    i0.ɵɵtext(13, \" sample2:\");\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementStart(15, \"ul\")(16, \"li\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"li\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"li\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"li\");\n    i0.ɵɵtext(23, \" editable: \");\n    i0.ɵɵtemplate(24, GraphQLConnectedDemoComponent_div_8_a_24_Template, 1, 0, \"a\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"li\");\n    i0.ɵɵtext(26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"li\");\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(29, \"div\")(30, \"h4\");\n    i0.ɵɵtext(31, \"Route Item (via Connected GraphQL)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(32);\n    i0.ɵɵelement(33, \"br\");\n    i0.ɵɵtext(34);\n    i0.ɵɵelement(35, \"br\");\n    i0.ɵɵtext(36, \" children: \");\n    i0.ɵɵelementStart(37, \"ul\");\n    i0.ɵɵtemplate(38, GraphQLConnectedDemoComponent_div_8_li_38_Template, 6, 3, \"li\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const queryResult_r2 = ctx.ngIf;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" id: \", queryResult_r2.data.datasource.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" name: \", queryResult_r2.data.datasource.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" sample1: \", queryResult_r2.data.datasource.sample1.value, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"scText\", queryResult_r2.data.datasource.sample1.jsonValue);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"text: \", queryResult_r2.data.datasource.sample2.text, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"url: \", queryResult_r2.data.datasource.sample2.url, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"target: \", queryResult_r2.data.datasource.sample2.target, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"scLink\", queryResult_r2.data.datasource.sample2.jsonValue);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"field type: \", queryResult_r2.data.datasource.sample2.definition.type, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"field is shared?: \", queryResult_r2.data.datasource.sample2.definition.shared.toString(), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" id: \", queryResult_r2.data.contextItem.id, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" page title: \", queryResult_r2.data.contextItem.pageTitle.value, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", queryResult_r2.data.contextItem.children.results);\n  }\n}\nfunction GraphQLConnectedDemoComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1, \"GraphQL query is loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\n// We can directly import .graphql files by specifying a Webpack loader in the require statement.\n// Direct importing means we don't need to use the `gql` helper from `graphql-tag` to parse the query;\n// it's done at build-time instead. Using a separate file is a best practice as it simplifies static analysis\n// of your GraphQL queries.\nconst ComponentQuery = require('graphql-tag/loader!./graph-ql-connected-demo.component.graphql');\nlet GraphQLConnectedDemoComponent = /*#__PURE__*/(() => {\n  class GraphQLConnectedDemoComponent {\n    graphQLService;\n    rendering;\n    query$;\n    // inject the JssGraphQLService to make GraphQL queries\n    // note that it's possible to use Apollo directly, but the JSS\n    // service provides automatic GraphQL variables and SSR assistance.\n    constructor(graphQLService) {\n      this.graphQLService = graphQLService;\n    }\n    ngOnInit() {\n      // the query result is an Rx Observable, so any observable patterns\n      // are usable here - async pipe (like this sample), subscribing manually,\n      // (don't forget to unsubscribe in ngOnDestroy), etc.\n      this.query$ = this.graphQLService.query({\n        query: ComponentQuery,\n        // passing in a rendering allows usage of the ambient $datasource GraphQL variable.\n        // if it's not passed, the variable will not be defined (but $contextItem is still available)\n        renderingContext: this.rendering\n      });\n    }\n    static ɵfac = function GraphQLConnectedDemoComponent_Factory(t) {\n      return new (t || GraphQLConnectedDemoComponent)(i0.ɵɵdirectiveInject(i1.JssGraphQLService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GraphQLConnectedDemoComponent,\n      selectors: [[\"app-graph-ql-connected-demo\"]],\n      inputs: {\n        rendering: \"rendering\"\n      },\n      decls: 12,\n      vars: 4,\n      consts: [[\"loading\", \"\"], [\"data-e2e-id\", \"graphql-connected\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"scText\"], [4, \"scLink\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [1, \"alert\", \"alert-info\"]],\n      template: function GraphQLConnectedDemoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n          i0.ɵɵtext(2, \"GraphQL Connected Demo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4, \" Connected GraphQL executes GraphQL queries directly against the Sitecore GraphQL endpoint. You can review the query execution in the browser devtools network tab. Note that Apollo Client maintains a query cache - so the same query will not execute twice (i.e. after route changes) unless either the page is refreshed, or the \");\n          i0.ɵɵelementStart(5, \"em\");\n          i0.ɵɵtext(6, \"fetch policy\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(7, \" is set to not use the cache. Consult the Apollo documentation for details. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, GraphQLConnectedDemoComponent_div_8_Template, 39, 13, \"div\", 2);\n          i0.ɵɵpipe(9, \"async\");\n          i0.ɵɵtemplate(10, GraphQLConnectedDemoComponent_ng_template_10_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const loading_r3 = i0.ɵɵreference(11);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(9, 2, ctx.query$))(\"ngIfElse\", loading_r3);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.LinkDirective, i4.TextDirective, i2.AsyncPipe],\n      encapsulation: 2\n    });\n  }\n  return GraphQLConnectedDemoComponent;\n})();\nexports.GraphQLConnectedDemoComponent = GraphQLConnectedDemoComponent;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
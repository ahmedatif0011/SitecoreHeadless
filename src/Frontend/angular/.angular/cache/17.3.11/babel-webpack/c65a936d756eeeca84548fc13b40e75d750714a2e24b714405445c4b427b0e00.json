{"ast":null,"code":"import { Directive, Input } from '@angular/core';\nimport { BaseFieldDirective } from './base-field.directive';\nimport { DefaultEmptyFieldEditingComponent } from './default-empty-text-field-editing-placeholder.component';\nimport { MetadataKind } from '@sitecore-jss/sitecore-jss/editing';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nexport let DateDirective = /*#__PURE__*/(() => {\n  class DateDirective extends BaseFieldDirective {\n    templateRef;\n    datePipe;\n    format;\n    timezone;\n    locale;\n    editable = true;\n    field;\n    /**\n     * Custom template to render in Pages in Metadata edit mode if field value is empty\n     */\n    emptyFieldEditingTemplate;\n    /**\n     * Default component to render in Pages in Metadata edit mode if field value is empty and emptyFieldEditingTemplate is not provided\n     */\n    defaultFieldEditingComponent;\n    constructor(viewContainer, templateRef, datePipe) {\n      super(viewContainer);\n      this.templateRef = templateRef;\n      this.datePipe = datePipe;\n      this.defaultFieldEditingComponent = DefaultEmptyFieldEditingComponent;\n    }\n    ngOnChanges(changes) {\n      if (changes.field || changes.format) {\n        this.viewContainer.clear();\n        this.updateView();\n      }\n    }\n    updateView() {\n      if (!this.shouldRender()) {\n        super.renderEmpty();\n        return;\n      }\n      this.renderMetadata(MetadataKind.Open);\n      this.viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n      this.renderMetadata(MetadataKind.Close);\n      const field = this.field;\n      const html = field.editable && this.editable ? field.editable : field.value;\n      const setDangerously = field.editable && this.editable;\n      this.viewRef.rootNodes.forEach(node => {\n        if (setDangerously) {\n          node.innerHTML = html;\n        } else {\n          node.textContent = this.datePipe.transform(html, this.format, this.timezone, this.locale);\n        }\n      });\n    }\n    static ɵfac = function DateDirective_Factory(t) {\n      return new (t || DateDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i1.DatePipe));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: DateDirective,\n      selectors: [[\"\", \"scDate\", \"\"]],\n      inputs: {\n        format: [i0.ɵɵInputFlags.None, \"scDateFormat\", \"format\"],\n        timezone: [i0.ɵɵInputFlags.None, \"scDateTimezone\", \"timezone\"],\n        locale: [i0.ɵɵInputFlags.None, \"scDateLocale\", \"locale\"],\n        editable: [i0.ɵɵInputFlags.None, \"scDateEditable\", \"editable\"],\n        field: [i0.ɵɵInputFlags.None, \"scDate\", \"field\"],\n        emptyFieldEditingTemplate: [i0.ɵɵInputFlags.None, \"scDateEmptyFieldEditingTemplate\", \"emptyFieldEditingTemplate\"]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return DateDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kYXRlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0wsU0FBUyxFQUNULEtBQUssR0FNTixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUM3RyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sb0NBQW9DLENBQUM7OztBQUtsRSxNQUFNLE9BQU8sYUFBYyxTQUFRLGtCQUFrQjtJQXVCekM7SUFDQTtJQXZCYSxNQUFNLENBQVU7SUFFZCxRQUFRLENBQVU7SUFFcEIsTUFBTSxDQUFVO0lBRWQsUUFBUSxHQUFHLElBQUksQ0FBQztJQUV4QixLQUFLLENBQVk7SUFFbEM7O09BRUc7SUFDdUMseUJBQXlCLENBQXVCO0lBRTFGOztPQUVHO0lBQ08sNEJBQTRCLENBQWdCO0lBRXRELFlBQ0UsYUFBK0IsRUFDdkIsV0FBaUMsRUFDakMsUUFBa0I7UUFFMUIsS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBSGIsZ0JBQVcsR0FBWCxXQUFXLENBQXNCO1FBQ2pDLGFBQVEsR0FBUixRQUFRLENBQVU7UUFHMUIsSUFBSSxDQUFDLDRCQUE0QixHQUFHLGlDQUFpQyxDQUFDO0lBQ3hFLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxPQUFPLENBQUMsS0FBSyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNwQyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQzNCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztRQUNwQixDQUFDO0lBQ0gsQ0FBQztJQUVPLFVBQVU7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDO1lBQ3pCLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNwQixPQUFPO1FBQ1QsQ0FBQztRQUVELElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDdkUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFeEMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUV6QixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7UUFDNUUsTUFBTSxjQUFjLEdBQUcsS0FBSyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1lBQ3RDLElBQUksY0FBYyxFQUFFLENBQUM7Z0JBQ25CLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1lBQ3hCLENBQUM7aUJBQU0sQ0FBQztnQkFDTixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzVGLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7d0dBMURVLGFBQWE7NEZBQWIsYUFBYTs7NEZBQWIsYUFBYTtrQkFIekIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsVUFBVTtpQkFDckI7c0lBRXdCLE1BQU07c0JBQTVCLEtBQUs7dUJBQUMsY0FBYztnQkFFSSxRQUFRO3NCQUFoQyxLQUFLO3VCQUFDLGdCQUFnQjtnQkFFQSxNQUFNO3NCQUE1QixLQUFLO3VCQUFDLGNBQWM7Z0JBRUksUUFBUTtzQkFBaEMsS0FBSzt1QkFBQyxnQkFBZ0I7Z0JBRU4sS0FBSztzQkFBckIsS0FBSzt1QkFBQyxRQUFRO2dCQUsyQix5QkFBeUI7c0JBQWxFLEtBQUs7dUJBQUMsaUNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0ZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQge1xyXG4gIERpcmVjdGl2ZSxcclxuICBJbnB1dCxcclxuICBPbkNoYW5nZXMsXHJcbiAgU2ltcGxlQ2hhbmdlcyxcclxuICBUZW1wbGF0ZVJlZixcclxuICBUeXBlLFxyXG4gIFZpZXdDb250YWluZXJSZWYsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERhdGVGaWVsZCB9IGZyb20gJy4vcmVuZGVyaW5nLWZpZWxkJztcclxuaW1wb3J0IHsgQmFzZUZpZWxkRGlyZWN0aXZlIH0gZnJvbSAnLi9iYXNlLWZpZWxkLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IERlZmF1bHRFbXB0eUZpZWxkRWRpdGluZ0NvbXBvbmVudCB9IGZyb20gJy4vZGVmYXVsdC1lbXB0eS10ZXh0LWZpZWxkLWVkaXRpbmctcGxhY2Vob2xkZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgTWV0YWRhdGFLaW5kIH0gZnJvbSAnQHNpdGVjb3JlLWpzcy9zaXRlY29yZS1qc3MvZWRpdGluZyc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tzY0RhdGVdJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERhdGVEaXJlY3RpdmUgZXh0ZW5kcyBCYXNlRmllbGREaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gIEBJbnB1dCgnc2NEYXRlRm9ybWF0JykgZm9ybWF0Pzogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoJ3NjRGF0ZVRpbWV6b25lJykgdGltZXpvbmU/OiBzdHJpbmc7XHJcblxyXG4gIEBJbnB1dCgnc2NEYXRlTG9jYWxlJykgbG9jYWxlPzogc3RyaW5nO1xyXG5cclxuICBASW5wdXQoJ3NjRGF0ZUVkaXRhYmxlJykgZWRpdGFibGUgPSB0cnVlO1xyXG5cclxuICBASW5wdXQoJ3NjRGF0ZScpIGZpZWxkOiBEYXRlRmllbGQ7XHJcblxyXG4gIC8qKlxyXG4gICAqIEN1c3RvbSB0ZW1wbGF0ZSB0byByZW5kZXIgaW4gUGFnZXMgaW4gTWV0YWRhdGEgZWRpdCBtb2RlIGlmIGZpZWxkIHZhbHVlIGlzIGVtcHR5XHJcbiAgICovXHJcbiAgQElucHV0KCdzY0RhdGVFbXB0eUZpZWxkRWRpdGluZ1RlbXBsYXRlJykgZW1wdHlGaWVsZEVkaXRpbmdUZW1wbGF0ZTogVGVtcGxhdGVSZWY8dW5rbm93bj47XHJcblxyXG4gIC8qKlxyXG4gICAqIERlZmF1bHQgY29tcG9uZW50IHRvIHJlbmRlciBpbiBQYWdlcyBpbiBNZXRhZGF0YSBlZGl0IG1vZGUgaWYgZmllbGQgdmFsdWUgaXMgZW1wdHkgYW5kIGVtcHR5RmllbGRFZGl0aW5nVGVtcGxhdGUgaXMgbm90IHByb3ZpZGVkXHJcbiAgICovXHJcbiAgcHJvdGVjdGVkIGRlZmF1bHRGaWVsZEVkaXRpbmdDb21wb25lbnQ6IFR5cGU8dW5rbm93bj47XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgdmlld0NvbnRhaW5lcjogVmlld0NvbnRhaW5lclJlZixcclxuICAgIHByaXZhdGUgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPHVua25vd24+LFxyXG4gICAgcHJpdmF0ZSBkYXRlUGlwZTogRGF0ZVBpcGVcclxuICApIHtcclxuICAgIHN1cGVyKHZpZXdDb250YWluZXIpO1xyXG4gICAgdGhpcy5kZWZhdWx0RmllbGRFZGl0aW5nQ29tcG9uZW50ID0gRGVmYXVsdEVtcHR5RmllbGRFZGl0aW5nQ29tcG9uZW50O1xyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgaWYgKGNoYW5nZXMuZmllbGQgfHwgY2hhbmdlcy5mb3JtYXQpIHtcclxuICAgICAgdGhpcy52aWV3Q29udGFpbmVyLmNsZWFyKCk7XHJcbiAgICAgIHRoaXMudXBkYXRlVmlldygpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB1cGRhdGVWaWV3KCkge1xyXG4gICAgaWYgKCF0aGlzLnNob3VsZFJlbmRlcigpKSB7XHJcbiAgICAgIHN1cGVyLnJlbmRlckVtcHR5KCk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLnJlbmRlck1ldGFkYXRhKE1ldGFkYXRhS2luZC5PcGVuKTtcclxuICAgIHRoaXMudmlld1JlZiA9IHRoaXMudmlld0NvbnRhaW5lci5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZVJlZik7XHJcbiAgICB0aGlzLnJlbmRlck1ldGFkYXRhKE1ldGFkYXRhS2luZC5DbG9zZSk7XHJcblxyXG4gICAgY29uc3QgZmllbGQgPSB0aGlzLmZpZWxkO1xyXG5cclxuICAgIGNvbnN0IGh0bWwgPSBmaWVsZC5lZGl0YWJsZSAmJiB0aGlzLmVkaXRhYmxlID8gZmllbGQuZWRpdGFibGUgOiBmaWVsZC52YWx1ZTtcclxuICAgIGNvbnN0IHNldERhbmdlcm91c2x5ID0gZmllbGQuZWRpdGFibGUgJiYgdGhpcy5lZGl0YWJsZTtcclxuICAgIHRoaXMudmlld1JlZi5yb290Tm9kZXMuZm9yRWFjaCgobm9kZSkgPT4ge1xyXG4gICAgICBpZiAoc2V0RGFuZ2Vyb3VzbHkpIHtcclxuICAgICAgICBub2RlLmlubmVySFRNTCA9IGh0bWw7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbm9kZS50ZXh0Q29udGVudCA9IHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKGh0bWwsIHRoaXMuZm9ybWF0LCB0aGlzLnRpbWV6b25lLCB0aGlzLmxvY2FsZSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXX0=","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
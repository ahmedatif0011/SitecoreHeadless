{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClientError = void 0;\nvar ClientError = /** @class */function (_super) {\n  __extends(ClientError, _super);\n  function ClientError(response, request) {\n    var _this = this;\n    var message = ClientError.extractMessage(response) + \": \" + JSON.stringify({\n      response: response,\n      request: request\n    });\n    _this = _super.call(this, message) || this;\n    Object.setPrototypeOf(_this, ClientError.prototype);\n    _this.response = response;\n    _this.request = request;\n    // this is needed as Safari doesn't support .captureStackTrace\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, ClientError);\n    }\n    return _this;\n  }\n  ClientError.extractMessage = function (response) {\n    try {\n      return response.errors[0].message;\n    } catch (e) {\n      return \"GraphQL Error (Code: \" + response.status + \")\";\n    }\n  };\n  return ClientError;\n}(Error);\nexports.ClientError = ClientError;\n//# sourceMappingURL=types.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
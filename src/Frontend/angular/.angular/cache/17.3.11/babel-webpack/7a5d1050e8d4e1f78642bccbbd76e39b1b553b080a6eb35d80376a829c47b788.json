{"ast":null,"code":"import { Directive, Input } from '@angular/core';\nimport { isAbsoluteUrl } from '@sitecore-jss/sitecore-jss/utils';\nimport { LinkDirective } from './link.directive';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let GenericLinkDirective = /*#__PURE__*/(() => {\n  class GenericLinkDirective extends LinkDirective {\n    router;\n    editable = true;\n    attrs = {};\n    field;\n    extras;\n    /**\n     * Custom template to render in Pages in Metadata edit mode if field value is empty\n     */\n    emptyFieldEditingTemplate;\n    constructor(viewContainer, templateRef, renderer, elementRef, router) {\n      super(viewContainer, templateRef, renderer, elementRef);\n      this.router = router;\n    }\n    renderTemplate(props, linkText) {\n      const viewRef = this.viewContainer.createEmbeddedView(this.templateRef);\n      viewRef.rootNodes.forEach(node => {\n        Object.entries(props).forEach(([key, propValue]) => {\n          if (key === 'href' && !isAbsoluteUrl(propValue)) {\n            const fragments = propValue.split('#');\n            const url = fragments[0];\n            const anchor = fragments[1];\n            const urlTree = this.router.createUrlTree([url], {\n              fragment: anchor,\n              ...this.extras\n            });\n            this.updateAttribute(node, key, this.router.serializeUrl(urlTree));\n            this.renderer.listen(node, 'click', event => {\n              this.router.navigate([url], {\n                fragment: anchor,\n                ...this.extras\n              });\n              // shouldn't prevent default if the link includes a fragment\n              if (!anchor) {\n                event.preventDefault();\n              }\n            });\n          } else {\n            this.updateAttribute(node, key, propValue);\n          }\n        });\n        if (node.childNodes && node.childNodes.length === 0 && linkText) {\n          node.textContent = linkText;\n        }\n      });\n    }\n    static ɵfac = function GenericLinkDirective_Factory(t) {\n      return new (t || GenericLinkDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Router));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: GenericLinkDirective,\n      selectors: [[\"\", \"scGenericLink\", \"\"]],\n      inputs: {\n        editable: [i0.ɵɵInputFlags.None, \"scGenericLinkEditable\", \"editable\"],\n        attrs: [i0.ɵɵInputFlags.None, \"scGenericLinkAttrs\", \"attrs\"],\n        field: [i0.ɵɵInputFlags.None, \"scGenericLink\", \"field\"],\n        extras: [i0.ɵɵInputFlags.None, \"scGenericLinkExtras\", \"extras\"],\n        emptyFieldEditingTemplate: [i0.ɵɵInputFlags.None, \"scGenericLinkEmptyFieldEditingTemplate\", \"emptyFieldEditingTemplate\"]\n      },\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n  return GenericLinkDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJpYy1saW5rLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2dlbmVyaWMtbGluay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEdBSU4sTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7O0FBSWpELE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxhQUFhO0lBcUIzQztJQXBCc0IsUUFBUSxHQUFHLElBQUksQ0FBQztJQUVuQixLQUFLLEdBQThCLEVBQUUsQ0FBQztJQUVuQyxLQUFLLENBQVk7SUFFbkIsTUFBTSxDQUFvQjtJQUV4RDs7T0FFRztJQUNzRCx5QkFBeUIsQ0FFaEY7SUFFRixZQUNFLGFBQStCLEVBQy9CLFdBQWlDLEVBQ2pDLFFBQW1CLEVBQ25CLFVBQXNCLEVBQ2QsTUFBYztRQUV0QixLQUFLLENBQUMsYUFBYSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFGaEQsV0FBTSxHQUFOLE1BQU0sQ0FBUTtJQUd4QixDQUFDO0lBRVMsY0FBYyxDQUFDLEtBQWdDLEVBQUUsUUFBZ0I7UUFDekUsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFeEUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNqQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBbUIsRUFBRSxFQUFFO2dCQUNuRSxJQUFJLEdBQUcsS0FBSyxNQUFNLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQztvQkFDaEQsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDdkMsTUFBTSxHQUFHLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUN6QixNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzVCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUU7d0JBQy9DLFFBQVEsRUFBRSxNQUFNO3dCQUNoQixHQUFHLElBQUksQ0FBQyxNQUFNO3FCQUNmLENBQUMsQ0FBQztvQkFDSCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztvQkFDbkUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO3dCQUM1QyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFOzRCQUMxQixRQUFRLEVBQUUsTUFBTTs0QkFDaEIsR0FBRyxJQUFJLENBQUMsTUFBTTt5QkFDZixDQUFDLENBQUM7d0JBRUgsNERBQTREO3dCQUM1RCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7NEJBQ1osS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO3dCQUN6QixDQUFDO29CQUNILENBQUMsQ0FBQyxDQUFDO2dCQUNMLENBQUM7cUJBQU0sQ0FBQztvQkFDTixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7Z0JBQzdDLENBQUM7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUVILElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sS0FBSyxDQUFDLElBQUksUUFBUSxFQUFFLENBQUM7Z0JBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO1lBQzlCLENBQUM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7d0dBNURVLG9CQUFvQjs0RkFBcEIsb0JBQW9COzs0RkFBcEIsb0JBQW9CO2tCQURoQyxTQUFTO21CQUFDLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFO3FMQUVSLFFBQVE7c0JBQXZDLEtBQUs7dUJBQUMsdUJBQXVCO2dCQUVELEtBQUs7c0JBQWpDLEtBQUs7dUJBQUMsb0JBQW9CO2dCQUVLLEtBQUs7c0JBQXBDLEtBQUs7dUJBQUMsZUFBZTtnQkFFUSxNQUFNO3NCQUFuQyxLQUFLO3VCQUFDLHFCQUFxQjtnQkFLNkIseUJBQXlCO3NCQUFqRixLQUFLO3VCQUFDLHdDQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgRGlyZWN0aXZlLFxyXG4gIEVsZW1lbnRSZWYsXHJcbiAgSW5wdXQsXHJcbiAgUmVuZGVyZXIyLFxyXG4gIFRlbXBsYXRlUmVmLFxyXG4gIFZpZXdDb250YWluZXJSZWYsXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJvdXRlciwgTmF2aWdhdGlvbkV4dHJhcyB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XHJcbmltcG9ydCB7IGlzQWJzb2x1dGVVcmwgfSBmcm9tICdAc2l0ZWNvcmUtanNzL3NpdGVjb3JlLWpzcy91dGlscyc7XHJcbmltcG9ydCB7IExpbmtEaXJlY3RpdmUgfSBmcm9tICcuL2xpbmsuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgTGlua0ZpZWxkIH0gZnJvbSAnLi9yZW5kZXJpbmctZmllbGQnO1xyXG5cclxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW3NjR2VuZXJpY0xpbmtdJyB9KVxyXG5leHBvcnQgY2xhc3MgR2VuZXJpY0xpbmtEaXJlY3RpdmUgZXh0ZW5kcyBMaW5rRGlyZWN0aXZlIHtcclxuICBASW5wdXQoJ3NjR2VuZXJpY0xpbmtFZGl0YWJsZScpIGVkaXRhYmxlID0gdHJ1ZTtcclxuXHJcbiAgQElucHV0KCdzY0dlbmVyaWNMaW5rQXR0cnMnKSBhdHRyczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9O1xyXG5cclxuICBASW5wdXQoJ3NjR2VuZXJpY0xpbmsnKSBkZWNsYXJlIGZpZWxkOiBMaW5rRmllbGQ7XHJcblxyXG4gIEBJbnB1dCgnc2NHZW5lcmljTGlua0V4dHJhcycpIGV4dHJhcz86IE5hdmlnYXRpb25FeHRyYXM7XHJcblxyXG4gIC8qKlxyXG4gICAqIEN1c3RvbSB0ZW1wbGF0ZSB0byByZW5kZXIgaW4gUGFnZXMgaW4gTWV0YWRhdGEgZWRpdCBtb2RlIGlmIGZpZWxkIHZhbHVlIGlzIGVtcHR5XHJcbiAgICovXHJcbiAgQElucHV0KCdzY0dlbmVyaWNMaW5rRW1wdHlGaWVsZEVkaXRpbmdUZW1wbGF0ZScpIGRlY2xhcmUgZW1wdHlGaWVsZEVkaXRpbmdUZW1wbGF0ZTogVGVtcGxhdGVSZWY8XHJcbiAgICB1bmtub3duXHJcbiAgPjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICB2aWV3Q29udGFpbmVyOiBWaWV3Q29udGFpbmVyUmVmLFxyXG4gICAgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPHVua25vd24+LFxyXG4gICAgcmVuZGVyZXI6IFJlbmRlcmVyMixcclxuICAgIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXHJcbiAgICBwcml2YXRlIHJvdXRlcjogUm91dGVyXHJcbiAgKSB7XHJcbiAgICBzdXBlcih2aWV3Q29udGFpbmVyLCB0ZW1wbGF0ZVJlZiwgcmVuZGVyZXIsIGVsZW1lbnRSZWYpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIHJlbmRlclRlbXBsYXRlKHByb3BzOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9LCBsaW5rVGV4dDogc3RyaW5nKSB7XHJcbiAgICBjb25zdCB2aWV3UmVmID0gdGhpcy52aWV3Q29udGFpbmVyLmNyZWF0ZUVtYmVkZGVkVmlldyh0aGlzLnRlbXBsYXRlUmVmKTtcclxuXHJcbiAgICB2aWV3UmVmLnJvb3ROb2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XHJcbiAgICAgIE9iamVjdC5lbnRyaWVzKHByb3BzKS5mb3JFYWNoKChba2V5LCBwcm9wVmFsdWVdOiBbc3RyaW5nLCBzdHJpbmddKSA9PiB7XHJcbiAgICAgICAgaWYgKGtleSA9PT0gJ2hyZWYnICYmICFpc0Fic29sdXRlVXJsKHByb3BWYWx1ZSkpIHtcclxuICAgICAgICAgIGNvbnN0IGZyYWdtZW50cyA9IHByb3BWYWx1ZS5zcGxpdCgnIycpO1xyXG4gICAgICAgICAgY29uc3QgdXJsID0gZnJhZ21lbnRzWzBdO1xyXG4gICAgICAgICAgY29uc3QgYW5jaG9yID0gZnJhZ21lbnRzWzFdO1xyXG4gICAgICAgICAgY29uc3QgdXJsVHJlZSA9IHRoaXMucm91dGVyLmNyZWF0ZVVybFRyZWUoW3VybF0sIHtcclxuICAgICAgICAgICAgZnJhZ21lbnQ6IGFuY2hvcixcclxuICAgICAgICAgICAgLi4udGhpcy5leHRyYXMsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHRoaXMudXBkYXRlQXR0cmlidXRlKG5vZGUsIGtleSwgdGhpcy5yb3V0ZXIuc2VyaWFsaXplVXJsKHVybFRyZWUpKTtcclxuICAgICAgICAgIHRoaXMucmVuZGVyZXIubGlzdGVuKG5vZGUsICdjbGljaycsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbdXJsXSwge1xyXG4gICAgICAgICAgICAgIGZyYWdtZW50OiBhbmNob3IsXHJcbiAgICAgICAgICAgICAgLi4udGhpcy5leHRyYXMsXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gc2hvdWxkbid0IHByZXZlbnQgZGVmYXVsdCBpZiB0aGUgbGluayBpbmNsdWRlcyBhIGZyYWdtZW50XHJcbiAgICAgICAgICAgIGlmICghYW5jaG9yKSB7XHJcbiAgICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMudXBkYXRlQXR0cmlidXRlKG5vZGUsIGtleSwgcHJvcFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgaWYgKG5vZGUuY2hpbGROb2RlcyAmJiBub2RlLmNoaWxkTm9kZXMubGVuZ3RoID09PSAwICYmIGxpbmtUZXh0KSB7XHJcbiAgICAgICAgbm9kZS50ZXh0Q29udGVudCA9IGxpbmtUZXh0O1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIl19","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
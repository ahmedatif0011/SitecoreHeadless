{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResponseError = void 0;\nexports.checkStatus = checkStatus;\nexports.fetchData = fetchData;\nconst utils_1 = require(\"./utils/utils\");\nclass ResponseError extends Error {\n  constructor(message, response) {\n    super(message);\n    Object.setPrototypeOf(this, ResponseError.prototype);\n    this.response = response;\n  }\n}\nexports.ResponseError = ResponseError;\n/**\n * @param {HttpResponse<T>} response the response to check\n * @throws {ResponseError} if response code is not ok\n */\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new ResponseError(response.statusText, response);\n  throw error;\n}\n/**\n * @param {string} url the URL to request; may include query string\n * @param {HttpDataFetcher} fetcher the fetcher to use to perform the request\n * @param {ParsedUrlQueryInput} params the query string parameters to send with the request\n */\nfunction fetchData(url, fetcher, params = {}) {\n  return fetcher((0, utils_1.resolveUrl)(url, params)).then(checkStatus).then(response => {\n    // axios auto-parses JSON responses, don't need to JSON.parse\n    return response.data;\n  });\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}
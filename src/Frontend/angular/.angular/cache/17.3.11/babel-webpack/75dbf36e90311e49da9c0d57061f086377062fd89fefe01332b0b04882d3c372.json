{"ast":null,"code":"import { trackingApi } from '@sitecore-jss/sitecore-jss-angular';\nimport { environment } from '../../../environments/environment';\nimport { JssDataFetcherService } from '../../jss-data-fetcher.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../jss-data-fetcher.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../shared/styleguide-specimen/styleguide-specimen.component\";\nfunction StyleguideTrackingComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"The tracking API is only available in connected, integrated, or headless modes.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StyleguideTrackingComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\", 2);\n    i0.ɵɵtext(2, \" Note: The JSS tracker API is disabled by default. Consult the \");\n    i0.ɵɵelementStart(3, \"a\", 3);\n    i0.ɵɵtext(4, \"tracking documentation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" to enable it. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 4)(7, \"fieldset\", 5)(8, \"legend\");\n    i0.ɵɵtext(9, \"Event\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\");\n    i0.ɵɵtext(11, \" Events are defined in \");\n    i0.ɵɵelementStart(12, \"code\");\n    i0.ɵɵtext(13, \"/sitecore/system/Settings/Analytics/Page Events\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"label\", 6);\n    i0.ɵɵtext(15, \"Event GUID or Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 7);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function StyleguideTrackingComponent_div_2_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.event, $event) || (ctx_r1.event = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function StyleguideTrackingComponent_div_2_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submitEvent());\n    });\n    i0.ɵɵtext(18, \" Submit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"fieldset\", 5)(20, \"legend\");\n    i0.ɵɵtext(21, \"Goal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"p\");\n    i0.ɵɵtext(23, \" Goals are defined in \");\n    i0.ɵɵelementStart(24, \"code\");\n    i0.ɵɵtext(25, \"/sitecore/system/Marketing Control Panel/Goals\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"label\", 9);\n    i0.ɵɵtext(27, \"Goal GUID or Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"input\", 10);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function StyleguideTrackingComponent_div_2_Template_input_ngModelChange_28_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.goal, $event) || (ctx_r1.goal = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function StyleguideTrackingComponent_div_2_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submitGoal());\n    });\n    i0.ɵɵtext(30, \" Submit \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(31, \"div\", 4)(32, \"fieldset\", 5)(33, \"legend\");\n    i0.ɵɵtext(34, \"Outcome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"p\");\n    i0.ɵɵtext(36, \" Outcomes are defined in \");\n    i0.ɵɵelementStart(37, \"code\");\n    i0.ɵɵtext(38, \"/sitecore/system/Marketing Control Panel/Outcomes\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(39, \"label\", 11);\n    i0.ɵɵtext(40, \"Outcome GUID or Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(41, \"input\", 12);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function StyleguideTrackingComponent_div_2_Template_input_ngModelChange_41_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.outcomeName, $event) || (ctx_r1.outcomeName = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(42, \"br\");\n    i0.ɵɵelementStart(43, \"label\", 13);\n    i0.ɵɵtext(44, \"Monetary Value (optional)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"input\", 14);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function StyleguideTrackingComponent_div_2_Template_input_ngModelChange_45_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.outcomeValue, $event) || (ctx_r1.outcomeValue = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function StyleguideTrackingComponent_div_2_Template_button_click_46_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submitOutcome());\n    });\n    i0.ɵɵtext(47, \" Submit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"fieldset\", 5)(49, \"legend\");\n    i0.ɵɵtext(50, \"Campaign\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"p\");\n    i0.ɵɵtext(52, \" Campaigns are defined in \");\n    i0.ɵɵelementStart(53, \"code\");\n    i0.ɵɵtext(54, \"/sitecore/system/Marketing Control Panel/Campaigns\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(55, \"label\", 15);\n    i0.ɵɵtext(56, \"Campaign GUID or Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(57, \"input\", 16);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function StyleguideTrackingComponent_div_2_Template_input_ngModelChange_57_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.campaign, $event) || (ctx_r1.campaign = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function StyleguideTrackingComponent_div_2_Template_button_click_58_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.triggerCampaign());\n    });\n    i0.ɵɵtext(59, \" Submit \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(60, \"div\", 4)(61, \"fieldset\", 5)(62, \"legend\");\n    i0.ɵɵtext(63, \"Page View\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(64, \"p\");\n    i0.ɵɵtext(65, \" Track arbitrary page views for custom routing or offline use. Note that Layout Service tracks page views by default unless \");\n    i0.ɵɵelementStart(66, \"code\");\n    i0.ɵɵtext(67, \"tracking=false\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(68, \" is passed in its query string. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(69, \"label\", 17);\n    i0.ɵɵtext(70, \"Page Item GUID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(71, \"input\", 18);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function StyleguideTrackingComponent_div_2_Template_input_ngModelChange_71_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.pageId, $event) || (ctx_r1.pageId = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(72, \"br\");\n    i0.ɵɵelementStart(73, \"label\", 19);\n    i0.ɵɵtext(74, \"Page URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(75, \"input\", 20);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function StyleguideTrackingComponent_div_2_Template_input_ngModelChange_75_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.pageUrl, $event) || (ctx_r1.pageUrl = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(76, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function StyleguideTrackingComponent_div_2_Template_button_click_76_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submitPageView());\n    });\n    i0.ɵɵtext(77, \" Submit \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(78, \"fieldset\", 5)(79, \"legend\");\n    i0.ɵɵtext(80, \"Batching\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(81, \"p\");\n    i0.ɵɵtext(82, \" The tracking API supports pushing a whole batch of events in a single request. This can be useful for queuing strategies or offline PWA usage. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(83, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function StyleguideTrackingComponent_div_2_Template_button_click_83_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submitBatching());\n    });\n    i0.ɵɵtext(84, \" Submit Batch of Events \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(85, \"div\", 4)(86, \"fieldset\", 5)(87, \"legend\");\n    i0.ɵɵtext(88, \"Interaction Control\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(89, \"p\");\n    i0.ɵɵtext(90, \" Tracking data is not pushed into the xConnect service until your session ends on the Sitecore server. Click this button to instantly end your session and flush the data - great for debugging and testing. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(91, \"p\", 2);\n    i0.ɵɵtext(92, \" Note: By default \");\n    i0.ɵɵelementStart(93, \"em\");\n    i0.ɵɵtext(94, \"anonymous\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(95, \" contacts will not be shown in Experience Profile. If your interactions are not showing up in Experience Profile, you may need to \");\n    i0.ɵɵelementStart(96, \"a\", 22);\n    i0.ɵɵtext(97, \" enable anonymous contact indexing. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(98, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function StyleguideTrackingComponent_div_2_Template_button_click_98_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.abandonSession());\n    });\n    i0.ɵɵtext(99, \" End Interaction \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.event);\n    i0.ɵɵadvance(12);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.goal);\n    i0.ɵɵadvance(13);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.outcomeName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.outcomeValue);\n    i0.ɵɵadvance(12);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.campaign);\n    i0.ɵɵadvance(14);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.pageId);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.pageUrl);\n  }\n}\n/**\n * Demonstrates usage of a Text content field within JSS.\n * Text fields are HTML encoded by default.\n */\nexport let StyleguideTrackingComponent = /*#__PURE__*/(() => {\n  class StyleguideTrackingComponent {\n    rendering;\n    event;\n    goal;\n    outcomeName;\n    outcomeValue;\n    campaign;\n    pageId;\n    pageUrl;\n    disconnectedMode = true;\n    trackingApiOptions;\n    constructor(dataFetcher) {\n      this.trackingApiOptions = {\n        host: environment.sitecoreApiHost,\n        querystringParams: {\n          sc_apikey: environment.sitecoreApiKey\n        },\n        fetcher: dataFetcher.fetch\n      };\n    }\n    ngOnInit() {\n      this.disconnectedMode = this.rendering.dataSource === 'available-in-connected-mode';\n    }\n    submitEvent() {\n      trackingApi.trackEvent([{\n        eventId: this.event\n      }], this.trackingApiOptions).then(() => alert('Page event pushed')).catch(error => alert(error));\n    }\n    submitGoal() {\n      trackingApi.trackEvent([{\n        goalId: this.goal\n      }], this.trackingApiOptions).then(() => alert('Goal pushed')).catch(error => alert(error));\n    }\n    submitOutcome() {\n      trackingApi.trackEvent([{\n        outcomeId: this.outcomeName,\n        currencyCode: 'USD',\n        monetaryValue: parseFloat(this.outcomeValue)\n      }], this.trackingApiOptions).then(() => alert('Outcome pushed')).catch(error => alert(error));\n    }\n    triggerCampaign() {\n      trackingApi.trackEvent([{\n        campaignId: this.campaign\n      }], this.trackingApiOptions).then(() => alert('Campaign set')).catch(error => alert(error));\n    }\n    submitPageView() {\n      trackingApi.trackEvent([{\n        pageId: this.pageId,\n        url: this.pageUrl\n      }], this.trackingApiOptions).then(() => alert('Page view pushed')).catch(error => alert(error));\n    }\n    abandonSession() {\n      const abandonOptions = {\n        action: 'flush',\n        ...this.trackingApiOptions\n      };\n      trackingApi.trackEvent([], abandonOptions).then(() => alert('Interaction has been terminated and its data pushed to xConnect.')).catch(error => alert(error));\n    }\n    submitBatching() {\n      trackingApi.trackEvent([{\n        eventId: 'Download'\n      }, {\n        goalId: 'Instant Demo'\n      }, {\n        outcomeId: 'Opportunity'\n      }, {\n        pageId: '{110D559F-DEA5-42EA-9C1C-8A5DF7E70EF9}',\n        url: '/arbitrary/url/you/own'\n      },\n      // this goal will be added to the new page/route ID set above, not the current route\n      {\n        goalId: 'Register'\n      }], this.trackingApiOptions).then(() => alert('Batch of events pushed')).catch(error => alert(error));\n    }\n    static ɵfac = function StyleguideTrackingComponent_Factory(t) {\n      return new (t || StyleguideTrackingComponent)(i0.ɵɵdirectiveInject(i1.JssDataFetcherService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: StyleguideTrackingComponent,\n      selectors: [[\"app-styleguide-tracking\"]],\n      inputs: {\n        rendering: \"rendering\"\n      },\n      decls: 3,\n      vars: 3,\n      consts: [[\"e2eId\", \"styleguide-tracking\", 3, \"rendering\"], [4, \"ngIf\"], [1, \"alert\", \"alert-warning\"], [\"href\", \"https://jss.sitecore.com/docs/fundamentals/services/tracking\"], [1, \"row\"], [1, \"form-group\", \"col-sm\"], [\"htmlFor\", \"event\"], [\"type\", \"text\", \"id\", \"event\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"click\"], [\"htmlFor\", \"goal\"], [\"type\", \"text\", \"id\", \"goal\", \"name\", \"goal\", \"placeholder\", \"i.e. Register\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"htmlFor\", \"outcomeName\"], [\"type\", \"text\", \"id\", \"outcomeName\", \"name\", \"outcomeName\", \"placeholder\", \"i.e. Marketing Lead\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"htmlFor\", \"outcomeValue\"], [\"type\", \"number\", \"id\", \"outcomeValue\", \"name\", \"outcomeValue\", \"placeholder\", \"i.e. 1337.00\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"htmlFor\", \"campaign\"], [\"type\", \"text\", \"id\", \"campaign\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"htmlFor\", \"pageId\"], [\"type\", \"text\", \"id\", \"pageId\", \"name\", \"pageId\", \"placeholder\", \"i.e. 11111111-1111-1111-1111-111111111111\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"htmlFor\", \"pageUrl\"], [\"type\", \"text\", \"id\", \"pageUrl\", \"name\", \"pageUrl\", \"placeholder\", \"i.e. /foo/bar\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"href\", \"https://doc.sitecore.net/developers/xp/xconnect/xconnect-search-indexer/enable-anonymous-contact-indexing.html\"]],\n      template: function StyleguideTrackingComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"app-styleguide-specimen\", 0);\n          i0.ɵɵtemplate(1, StyleguideTrackingComponent_p_1_Template, 2, 0, \"p\", 1)(2, StyleguideTrackingComponent_div_2_Template, 100, 7, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"rendering\", ctx.rendering);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.disconnectedMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.disconnectedMode);\n        }\n      },\n      dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel, i4.StyleguideSpecimenComponent],\n      encapsulation: 2\n    });\n  }\n  return StyleguideTrackingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
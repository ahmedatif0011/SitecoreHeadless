{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { APP_ID, NgModule, TransferState } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RoutingModule } from './routing/routing.module';\nimport { JssLayoutService } from './layout/jss-layout.service';\nimport { AppComponentsModule } from './components/app-components.module';\nimport { AppComponent } from './app.component';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { JssTranslationClientLoaderService } from './i18n/jss-translation-client-loader.service';\nimport { JssTranslationLoaderService } from './i18n/jss-translation-loader.service';\nimport { GraphQLModule } from './jss-graphql.module';\nimport { JssMetaService } from './jss-meta.service';\nimport { JssContextService } from './jss-context.service';\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  imports: [HttpClientModule, GraphQLModule, RoutingModule, TranslateModule.forRoot({\n    loader: {\n      provide: TranslateLoader,\n      useFactory: transferState => new JssTranslationClientLoaderService(new JssTranslationLoaderService(), transferState),\n      deps: [TransferState]\n    }\n  }), AppComponentsModule],\n  providers: [\n  // The token is needed in cases when multiple applications are bootstrapped on a page\n  {\n    provide: APP_ID,\n    useValue: 'my-app'\n  }, JssContextService, JssLayoutService, JssMetaService,\n  // IMPORTANT: you must set the base href with this token, not a <base> tag in the HTML.\n  // the Sitecore Experience Editor will not work correctly when a base tag is used.\n  {\n    provide: APP_BASE_HREF,\n    useValue: '/'\n  }],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}